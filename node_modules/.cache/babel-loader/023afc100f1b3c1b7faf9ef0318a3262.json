{"ast":null,"code":"import axios from \"axios\";\nimport { APIhandler } from \"./method\";\nconst apiBaseUrl = process.env.REACT_APP_SERVER_URL;\n\nconst APICaller = ({\n  method = \"get\",\n  reqUrl,\n  data = {},\n  headers = {\n    \"content-type\": \"application/json\",\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": true\n  }\n}) => {\n  return new Promise(async (resolve, reject) => {\n    let url = `${apiBaseUrl}/${reqUrl}`; //console.log(url, \"data\", data, \"method\", method, \"header\", headers);\n\n    let options = {\n      method,\n      url,\n      data,\n      headers\n    };\n    if (method.toLowerCase() === \"get\") delete options[\"data\"];\n    axios({ ...options\n    }).then(response => {\n      //  console.log(\"%c{res}\", \"color: green\", \" => \", response); // eslint-disable-line no-console\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nexport default process.env.REACT_APP_ENV === \"withoutServer\" ? APIhandler : APICaller;","map":{"version":3,"sources":["C:/Users/Firas Chikhaoui/Desktop/pim/react(front)/trackmedds_front_end/src/utils/APICaller.js"],"names":["axios","APIhandler","apiBaseUrl","process","env","REACT_APP_SERVER_URL","APICaller","method","reqUrl","data","headers","Accept","Promise","resolve","reject","url","options","toLowerCase","then","response","catch","error","REACT_APP_ENV"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,UAA3B;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,MAAM,GAAG,KADQ;AAEjBC,EAAAA,MAFiB;AAGjBC,EAAAA,IAAI,GAAG,EAHU;AAIjBC,EAAAA,OAAO,GAAG;AACR,oBAAgB,kBADR;AAEPC,IAAAA,MAAM,EAAE,kBAFD;AAGR,mCAA+B;AAHvB;AAJO,CAAD,KASZ;AACJ,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAIC,GAAG,GAAI,GAAEb,UAAW,IAAGM,MAAO,EAAlC,CAD4C,CAE3C;;AACD,QAAIQ,OAAO,GAAG;AACZT,MAAAA,MADY;AAEZQ,MAAAA,GAFY;AAGZN,MAAAA,IAHY;AAIZC,MAAAA;AAJY,KAAd;AAMA,QAAIH,MAAM,CAACU,WAAP,OAAyB,KAA7B,EAAoC,OAAOD,OAAO,CAAC,MAAD,CAAd;AACpChB,IAAAA,KAAK,CAAC,EAAE,GAAGgB;AAAL,KAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAI;AACjB;AACCN,MAAAA,OAAO,CAACM,QAAD,CAAP;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdP,MAAAA,MAAM,CAACO,KAAD,CAAN;AACD,KAPH;AAQD,GAlBM,CAAP;AAmBD,CA7BD;;AA8BA,eAAelB,OAAO,CAACC,GAAR,CAAYkB,aAAZ,KAA8B,eAA9B,GACXrB,UADW,GAEXK,SAFJ","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { APIhandler } from \"./method\";\r\n\r\nconst apiBaseUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst APICaller = ({\r\n  method = \"get\",\r\n  reqUrl,\r\n  data = {},\r\n  headers = {\r\n    \"content-type\": \"application/json\",\r\n     Accept: \"application/json\",\r\n    \"Access-Control-Allow-Origin\": true,\r\n  }\r\n}) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    let url = `${apiBaseUrl}/${reqUrl}`;\r\n     //console.log(url, \"data\", data, \"method\", method, \"header\", headers);\r\n    let options = {\r\n      method,\r\n      url,\r\n      data,\r\n      headers\r\n    };\r\n    if (method.toLowerCase() === \"get\") delete options[\"data\"];\r\n    axios({ ...options })\r\n      .then(response => {\r\n       //  console.log(\"%c{res}\", \"color: green\", \" => \", response); // eslint-disable-line no-console\r\n        resolve(response);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\nexport default process.env.REACT_APP_ENV === \"withoutServer\"\r\n  ? APIhandler\r\n  : APICaller;\r\n"]},"metadata":{},"sourceType":"module"}