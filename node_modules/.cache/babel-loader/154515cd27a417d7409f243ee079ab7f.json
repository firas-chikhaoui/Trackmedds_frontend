{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Firas Chikhaoui\\\\Desktop\\\\Nouveau dossier\\\\trackmedds_front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport ActionTypes from \"../constants/ActionTypes\";\nimport get from \"lodash/get\";\nconst initialItemExpected = 20;\nconst initialState = {\n  items: [],\n  itemsApiInProgress: false,\n  responseItemCount: initialItemExpected,\n  filters: {\n    search: \"\",\n    sort: \"\",\n    order: \"\",\n    region: \"\",\n    limit: initialItemExpected,\n    skip: 0\n  }\n};\n\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_ITEMS:\n      return Object.assign({}, state, {\n        itemsApiInProgress: true\n      });\n\n    case ActionTypes.GET_ITEMS_FAILURE:\n      return Object.assign({}, state, {\n        itemsApiInProgress: false\n      });\n\n    case ActionTypes.GET_ITEMS_SUCCESS:\n      return Object.assign({}, state, {\n        items: [...state.items, ...get(action, \"payload.content\", [])],\n        responseItemCount: get(action, \"payload.content\", []).length,\n        itemsApiInProgress: false,\n        filters: _objectSpread({}, state.filters, {\n          skip: state.filters.skip + state.filters.limit\n        })\n      });\n\n    case ActionTypes.CLEAR_ITEMS_LIST:\n      return Object.assign({}, state, {\n        items: []\n      });\n\n    case ActionTypes.ITEMS_FILTER_CHANGE:\n      {\n        return Object.assign({}, state, {\n          filters: _objectSpread({}, state.filters, {}, action.payload)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;","map":{"version":3,"sources":["C:/Users/Firas Chikhaoui/Desktop/Nouveau dossier/trackmedds_front_end/src/redux/reducer/items.js"],"names":["ActionTypes","get","initialItemExpected","initialState","items","itemsApiInProgress","responseItemCount","filters","search","sort","order","region","limit","skip","itemsReducer","state","action","type","GET_ITEMS","Object","assign","GET_ITEMS_FAILURE","GET_ITEMS_SUCCESS","length","CLEAR_ITEMS_LIST","ITEMS_FILTER_CHANGE","payload"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,MAAMC,mBAAmB,GAAG,EAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,kBAAkB,EAAE,KAFD;AAGnBC,EAAAA,iBAAiB,EAAEJ,mBAHA;AAInBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,IAAI,EAAE,EAFC;AAGPC,IAAAA,KAAK,EAAE,EAHA;AAIPC,IAAAA,MAAM,EAAE,EAJD;AAKPC,IAAAA,KAAK,EAAEV,mBALA;AAMPW,IAAAA,IAAI,EAAE;AANC;AAJU,CAArB;;AAcA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAW,CAACkB,SAAjB;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BV,QAAAA,kBAAkB,EAAE;AADU,OAAzB,CAAP;;AAGF,SAAKL,WAAW,CAACqB,iBAAjB;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BV,QAAAA,kBAAkB,EAAE;AADU,OAAzB,CAAP;;AAGF,SAAKL,WAAW,CAACsB,iBAAjB;AACE,aAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BX,QAAAA,KAAK,EAAE,CAAC,GAAGW,KAAK,CAACX,KAAV,EAAiB,GAAGH,GAAG,CAACe,MAAD,EAAS,iBAAT,EAA4B,EAA5B,CAAvB,CADuB;AAE9BV,QAAAA,iBAAiB,EAAEL,GAAG,CAACe,MAAD,EAAS,iBAAT,EAA4B,EAA5B,CAAH,CAAmCO,MAFxB;AAG9BlB,QAAAA,kBAAkB,EAAE,KAHU;AAI9BE,QAAAA,OAAO,oBACFQ,KAAK,CAACR,OADJ;AAELM,UAAAA,IAAI,EAAEE,KAAK,CAACR,OAAN,CAAcM,IAAd,GAAqBE,KAAK,CAACR,OAAN,CAAcK;AAFpC;AAJuB,OAAzB,CAAP;;AASF,SAAKZ,WAAW,CAACwB,gBAAjB;AACE,aAAOL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BX,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF,SAAKJ,WAAW,CAACyB,mBAAjB;AAAsC;AACpC,eAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BR,UAAAA,OAAO,oBAAOQ,KAAK,CAACR,OAAb,MAAyBS,MAAM,CAACU,OAAhC;AADuB,SAAzB,CAAP;AAGD;;AACD;AACE,aAAOX,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,YAAf","sourcesContent":["import ActionTypes from \"../constants/ActionTypes\";\r\nimport get from \"lodash/get\";\r\n\r\nconst initialItemExpected = 20;\r\nconst initialState = {\r\n  items: [],\r\n  itemsApiInProgress: false,\r\n  responseItemCount: initialItemExpected,\r\n  filters: {\r\n    search: \"\",\r\n    sort: \"\",\r\n    order: \"\",\r\n    region: \"\",\r\n    limit: initialItemExpected,\r\n    skip: 0\r\n  }\r\n};\r\n\r\nconst itemsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_ITEMS:\r\n      return Object.assign({}, state, {\r\n        itemsApiInProgress: true\r\n      });\r\n    case ActionTypes.GET_ITEMS_FAILURE:\r\n      return Object.assign({}, state, {\r\n        itemsApiInProgress: false\r\n      });\r\n    case ActionTypes.GET_ITEMS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        items: [...state.items, ...get(action, \"payload.content\", [])],\r\n        responseItemCount: get(action, \"payload.content\", []).length,\r\n        itemsApiInProgress: false,\r\n        filters: {\r\n          ...state.filters,\r\n          skip: state.filters.skip + state.filters.limit\r\n        }\r\n      });\r\n    case ActionTypes.CLEAR_ITEMS_LIST:\r\n      return Object.assign({}, state, {\r\n        items: []\r\n      });\r\n    case ActionTypes.ITEMS_FILTER_CHANGE: {\r\n      return Object.assign({}, state, {\r\n        filters: { ...state.filters, ...action.payload }\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n"]},"metadata":{},"sourceType":"module"}