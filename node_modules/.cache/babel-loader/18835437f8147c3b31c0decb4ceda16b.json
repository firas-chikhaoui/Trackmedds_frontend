{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Firas Chikhaoui\\\\Desktop\\\\Nouveau dossier\\\\trackmedds_front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Firas Chikhaoui\\\\Desktop\\\\Nouveau dossier\\\\trackmedds_front_end\\\\src\\\\containers\\\\Reclamation.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types'; // @ts-ignore\n\nimport colors from \"assets/css/colors.scss\";\n\nconst CustomInput = (_ref) => {\n  let field = _ref.field,\n      form = _ref.form,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n  return React.createElement(\"input\", Object.assign({}, field, props, {\n    className: \"form-control textname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nconst CustomcheCkbox = (_ref2) => {\n  let field = _ref2.field,\n      form = _ref2.form,\n      props = _objectWithoutProperties(_ref2, [\"field\", \"form\"]);\n\n  return React.createElement(\"input\", Object.assign({}, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nconst CustomInputarea = (_ref3) => {\n  let field = _ref3.field,\n      form = _ref3.form,\n      props = _objectWithoutProperties(_ref3, [\"field\", \"form\"]);\n\n  return React.createElement(\"textarea\", Object.assign({\n    rows: \"6\"\n  }, field, props, {\n    className: \"form-control textname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nconst CustomError = props => {\n  return React.createElement(\"div\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.children);\n};\n\nconst themeBr = colors.themeBr;\nexport default class Reclamation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null,\n      selectedOptionbis: null\n    };\n\n    this.handleChangeselect = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.handleChangeselectbis = selectedOptionbis => {\n      this.setState({\n        selectedOptionbis\n      });\n    };\n\n    this.userSchema = Yup.object().shape({\n      nom: Yup.string().required(\"Le nom est obligatoire.\"),\n      subject: Yup.string().required(\"Le sujet est obligatoire.\"),\n      checkbox: Yup.string().required(\"checkbox est obligatoire.\"),\n      phone: Yup.string().min(10, \"10 caractères minimum\").required(\"Le numéro de téléphone est obligatoire.\"),\n      email: Yup.string().email(\"Merci de saisir une adresse email valide\").required(\"L’adresse email est obligatoire.\"),\n      message: Yup.string().min(20, \"20 caractères minimum\").required(\"Message est obligation.\")\n    });\n    this.state = {\n      url_api: process.env.REACT_APP_SERVER_URL,\n      pharmacie: \"\",\n      medicament: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(this.state.url_api + `/reclamation/searchbis`).then(res => {\n      this.setState({\n        options: res.data.map(option => ({\n          value: option.room_type,\n          label: option.room_type + ' (' + option.neighbourhood + ')'\n        }))\n      });\n      console.log(this.state.options);\n    }).catch(err => console.log(err));\n    axios.get(this.state.url_api + `/reclamation/search`).then(res => {\n      this.setState({\n        optionsbis: res.data.map(option => ({\n          value: option.nproduct,\n          label: option.nproduct\n        }))\n      }); //  console.log(this.state.optionsbis);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedOption = _this$state.selectedOption,\n          selectedOptionbis = _this$state.selectedOptionbis;\n    return React.createElement(\"section\", {\n      className: \"pb-5 reclamation\",\n      style: {\n        paddingTop: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 text-center pfull-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"mb-5\",\n      style: {\n        color: themeBr\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Reclamation\"), React.createElement(Formik, {\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          if (this.state.selectedOption !== undefined) {\n            this.setState({\n              pharmacie: this.state.selectedOption.value\n            });\n          } else {\n            this.setState({\n              pharmacie: \"\"\n            });\n          }\n\n          if (this.state.selectedOptionbis !== undefined) {\n            this.setState({\n              medicament: this.state.selectedOptionbis.value\n            });\n          } else {\n            this.setState({\n              medicament: \"\"\n            });\n          }\n\n          const userObject = {\n            name: values.nom,\n            email: values.email,\n            subject: values.subject,\n            phone: values.phone,\n            message: values.message,\n            pharmacie: this.state.pharmacie,\n            medicament: this.state.medicament\n          };\n          console.log(values);\n          axios.post(this.state.url_api + `/reclamation/add`, userObject).then(res => {\n            console.log(res.data);\n          }).catch(error => {\n            console.log(error);\n          });\n          setSubmitting(true);\n        }, 400);\n      },\n      initialValues: {\n        nom: '',\n        phone: '',\n        email: '',\n        subject: '',\n        checkbox: '',\n        message: ''\n      },\n      validationSchema: this.userSchema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, ({\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nom\",\n      type: \"text\",\n      placeholder: \"Nom complet\",\n      component: CustomInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"nom\",\n      component: CustomError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Adresse email\",\n      component: CustomInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: CustomError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"phone\",\n      type: \"text\",\n      placeholder: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n      component: CustomInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"phone\",\n      component: CustomError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: selectedOption,\n      isClearable: true,\n      onChange: this.handleChangeselect,\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: selectedOptionbis,\n      isClearable: true,\n      onChange: this.handleChangeselectbis,\n      options: this.state.optionsbis,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"subject\",\n      type: \"text\",\n      placeholder: \"Sujet\",\n      component: CustomInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"subject\",\n      component: CustomError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"message\",\n      placeholder: \"Message\",\n      component: CustomInputarea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"message\",\n      component: CustomError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"text-left privacy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fieldset-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Politique de confidentialit\\xE9\"), React.createElement(\"div\", {\n      className: \"formRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkboxGroupWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkboxWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"checkbox\",\n      type: \"checkbox\",\n      value: \"J\\u2019ai lu les informations et je suis d\\u2019accord\",\n      component: CustomcheCkbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), \"J\\u2019ai lu les informations et je suis d\\u2019accord. *)\"), React.createElement(ErrorMessage, {\n      name: \"checkbox\",\n      component: CustomError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"form-group text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btnsend btn btn-primary btn-xs mt-3 mt-5\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \" \", isSubmitting ? \"Envoyé :)\" : \"Envoyer\"))))))))));\n  }\n\n}\nReclamation.propTypes = {\n  name: PropTypes.string,\n  neighbourhood: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/Firas Chikhaoui/Desktop/Nouveau dossier/trackmedds_front_end/src/containers/Reclamation.jsx"],"names":["React","Component","Formik","Field","ErrorMessage","Yup","axios","Select","PropTypes","colors","CustomInput","field","form","props","CustomcheCkbox","CustomInputarea","CustomError","children","themeBr","Reclamation","constructor","state","selectedOption","selectedOptionbis","handleChangeselect","setState","handleChangeselectbis","userSchema","object","shape","nom","string","required","subject","checkbox","phone","min","email","message","url_api","process","env","REACT_APP_SERVER_URL","pharmacie","medicament","componentDidMount","get","then","res","options","data","map","option","value","room_type","label","neighbourhood","console","log","catch","err","optionsbis","nproduct","render","paddingTop","color","values","setSubmitting","setTimeout","undefined","userObject","name","post","error","handleSubmit","isSubmitting","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik,Field,ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport PropTypes from 'prop-types';\r\n\r\n // @ts-ignore\r\nimport colors from \"assets/css/colors.scss\";\r\n\r\nconst CustomInput = ({field,form,...props}) =>{\r\n  return(     \r\n      <input {...field} {...props} className=\"form-control textname\"/>\r\n  )\r\n  }\r\n\r\n  const CustomcheCkbox = ({field,form,...props}) =>{\r\n    return(\r\n        <input {...field} {...props} />\r\n    )\r\n    }\r\n  \r\n  const CustomInputarea = ({field,form,...props}) =>{\r\n      return(\r\n          <textarea rows=\"6\" {...field} {...props} className=\"form-control textname\"></textarea>\r\n      )\r\n      }\r\n  \r\n  const CustomError = (props) =>{\r\n    return(\r\n  <div className=\"text-danger\">{ props.children }</div>\r\n  )\r\n  }\r\n\r\n\r\n\r\nconst { themeBr } = colors;\r\n\r\nexport default class Reclamation extends Component {\r\n\r\n  state = {\r\n    selectedOption: null,\r\n    selectedOptionbis: null,\r\n  };\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      url_api: process.env.REACT_APP_SERVER_URL,\r\n      pharmacie:\"\",\r\n      medicament:\"\",\r\n    }\r\n}\r\nhandleChangeselect = selectedOption => {\r\n  this.setState(\r\n    { selectedOption }\r\n  );\r\n};\r\nhandleChangeselectbis = selectedOptionbis => {\r\n  this.setState(\r\n    { selectedOptionbis }\r\n  );\r\n};\r\n\r\n  \r\n  userSchema = Yup.object().shape({\r\n    nom: Yup.string().required(\"Le nom est obligatoire.\"),\r\n    subject: Yup.string().required(\"Le sujet est obligatoire.\"),\r\n    checkbox: Yup.string().required(\"checkbox est obligatoire.\"),\r\n    phone: Yup.string().min(10,\"10 caractères minimum\").required(\"Le numéro de téléphone est obligatoire.\"),\r\n    email: Yup\r\n      .string()\r\n      .email(\"Merci de saisir une adresse email valide\")\r\n      .required(\"L’adresse email est obligatoire.\"),\r\n    message: Yup.string().min(20,\"20 caractères minimum\").required(\"Message est obligation.\"),\r\n    });\r\n\r\n  componentDidMount() {\r\n      axios.get(this.state.url_api + `/reclamation/searchbis`)\r\n      .then(res => {\r\n        this.setState({\r\n          options : res.data.map(option => ({\r\n          value: option.room_type,\r\n          label: option.room_type+' ('+option.neighbourhood+')'\r\n        }))\r\n       }) \r\n          console.log(this.state.options);\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        axios.get(this.state.url_api + `/reclamation/search`)\r\n      .then(res => {\r\n        this.setState({\r\n          optionsbis : res.data.map(option => ({\r\n          value: option.nproduct,\r\n          label: option.nproduct\r\n        }))\r\n       }) \r\n        //  console.log(this.state.optionsbis);\r\n        })\r\n        .catch(err => console.log(err))\r\n     };\r\n    \r\n\r\n  render() {\r\n   \r\n    const { selectedOption,selectedOptionbis } = this.state;\r\n    return (\r\n      <section className=\"pb-5 reclamation\" style={{paddingTop:'80px'}}>\r\n      <div className=\"container\">\r\n         <div className=\"row\">\r\n                 <div className=\"col-lg-12 col-md-12 text-center pfull-div\">\r\n                     <div className=\"row\">\r\n                     <div className=\"col-lg-2 col-md-2\"></div>\r\n                     <div className=\"col-lg-8 col-md-8\">\r\n                     <h1 className=\"mb-5\" style={{color:themeBr}}>Reclamation</h1>\r\n\r\n                     <Formik \r\n                     onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n\r\n            if(this.state.selectedOption!==undefined){\r\n              this.setState({ pharmacie: this.state.selectedOption.value })\r\n            }else{\r\n              this.setState({ pharmacie: \"\" })\r\n            }\r\n\r\n            if(this.state.selectedOptionbis!==undefined){\r\n              this.setState({ medicament : this.state.selectedOptionbis.value })\r\n            }else{\r\n              this.setState({ medicament : \"\" })\r\n            }\r\n\r\n\r\n             const userObject = {\r\n              name: values.nom,\r\n              email: values.email,\r\n              subject: values.subject,\r\n              phone: values.phone,\r\n              message: values.message,\r\n              pharmacie: this.state.pharmacie,\r\n              medicament: this.state.medicament,\r\n            };\r\n\r\n            console.log(values);\r\n\r\n            axios.post(this.state.url_api + `/reclamation/add`, userObject)\r\n              .then((res) => {\r\n                  console.log(res.data)\r\n              }).catch((error) => {\r\n                  console.log(error)\r\n              });\r\n\r\n\r\n            setSubmitting(true);\r\n          }, 400);\r\n        }}\r\ninitialValues={ {nom:'',phone:'',email:'',subject:'',checkbox:'',message:''} }\r\nvalidationSchema={ this.userSchema }\r\n>\r\n  {({\r\nhandleSubmit,\r\nisSubmitting,\r\n      }) => (\r\n        <form onSubmit={ handleSubmit } >\r\n        <div className=\"form-group\">\r\n                <Field name=\"nom\" type=\"text\" placeholder=\"Nom complet\" component={CustomInput}  />\r\n                <ErrorMessage name=\"nom\" component={CustomError} />\r\n        </div>\r\n                <div className=\"form-group\">\r\n\t\t\t\t<Field name=\"email\" type=\"email\" placeholder=\"Adresse email\" component={CustomInput} />\r\n                <ErrorMessage name=\"email\" component={CustomError} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <Field name=\"phone\" type=\"text\" placeholder=\"Numéro de téléphone\" component={CustomInput} />\r\n                <ErrorMessage name=\"phone\" component={CustomError} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                  <Select\r\n        value={selectedOption}\r\n        isClearable\r\n        onChange={this.handleChangeselect}\r\n        options={this.state.options}\r\n      />\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                  <Select\r\n        value={selectedOptionbis}\r\n        isClearable\r\n        onChange={this.handleChangeselectbis}\r\n        options={this.state.optionsbis}\r\n      />\r\n                  </div>\r\n                  </div>\r\n      </div>\r\n                <div className=\"form-group\">\r\n                <Field name=\"subject\" type=\"text\" placeholder=\"Sujet\" component={CustomInput} />\r\n                <ErrorMessage name=\"subject\" component={CustomError} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <Field name=\"message\" placeholder=\"Message\" component={CustomInputarea} />\r\n                <ErrorMessage name=\"message\" component={CustomError} />\r\n                </div>\r\n      <fieldset className=\"text-left privacy\">\r\n                <div className=\"fieldset-inner\">\r\n                <legend>Politique de confidentialité</legend>\r\n                    <div  className=\"formRow\">\r\n                        <div className=\"checkboxGroupWrap\">\r\n                            <div className=\"checkboxWrap\">\r\n                            <label>\r\n                            <Field name=\"checkbox\" type=\"checkbox\" value=\"J’ai lu les informations et je suis d’accord\" component={CustomcheCkbox} />\r\n                            J’ai lu les informations et je suis d’accord. *)</label>\r\n                            <ErrorMessage name=\"checkbox\" component={CustomError} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\t\t\r\n                </div>\r\n\r\n\r\n        </fieldset>\r\n        <div className=\"form-group text-right\">\r\n        <button className=\"btnsend btn btn-primary btn-xs mt-3 mt-5\" type=\"submit\" disabled={ isSubmitting } > {isSubmitting ? \"Envoyé :)\" : \"Envoyer\"}</button>\r\n\t\t\t</div>\r\n\r\n      </form>\r\n      )\r\n  }\r\n</Formik>\r\n\r\n\r\n\r\n     </div>\r\n     </div>\r\n     </div>\r\n     </div>\r\n     </div>\r\n     </section>\r\n    );\r\n  }\r\n}\r\n\r\nReclamation.propTypes = {\r\n  name: PropTypes.string,\r\n  neighbourhood:PropTypes.string\r\n};"]},"metadata":{},"sourceType":"module"}